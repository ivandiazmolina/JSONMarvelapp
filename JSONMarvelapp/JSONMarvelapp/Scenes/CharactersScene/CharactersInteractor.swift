//
//  CharactersInteractor.swift
//  JSONMarvelapp
//
//  Created by Iván Díaz Molina on 2/12/20.
//  Copyright (c) 2020 IDIAZM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharactersBusinessLogic {
    func setupView()
    func getCharactersCount() -> Int
    func getCharacterCellFor(index: Int) -> Characters.Models.CharacterCellModel
}

protocol CharactersDataStore {
    var serie: Serie? { get set }
    var characters: [Actor]? { get set }
}

class CharactersInteractor: CharactersBusinessLogic, CharactersDataStore {
    
    var presenter: CharactersPresentationLogic?
    var worker: CharactersWorker?
    
    var serie: Serie?
    var characters: [Actor]?
    
    func setupView() {

        worker = CharactersWorker()
        
        // 1. check serie object
        guard let serie = serie else {
            return
        }
        
        // 2. load character of serie selected
        loadCharacters(for: serie)
        
        // 3. fire setupView
        presenter?.setupView()
    }
    
    func loadCharacters(for serie: Serie) {
        
        worker?.getCharacters(for: serie, completion: { [weak self] (characters, error) in
                        
            self?.characters = characters
            
            self?.presenter?.presentCharacters()
        })
    }
    
    func getCharactersCount() -> Int {
        return characters?.count ?? 0
    }
    
    func getCharacterCellFor(index: Int) -> Characters.Models.CharacterCellModel {
        guard let actor = characters?.getElement(index) else { return Characters.Models.CharacterCellModel() }
        return Characters.Models.CharacterCellModel(character: actor)
    }
}
