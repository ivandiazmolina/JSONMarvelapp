//
//  DetailsInteractor.swift
//  JSONMarvelapp
//
//  Created by Iván Díaz Molina on 3/12/20.
//  Copyright (c) 2020 IDIAZM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailsBusinessLogic {
    func setupView()
    func getSeriesCount() -> Int
    func getComicsCount() -> Int
    func getSectionsCount() -> Int
    func getDataCellFor(index: Int, section: Int) -> Details.Models.DetailCellModel
}

protocol DetailsDataStore {
    var character: Actor? { get set }
}

class DetailsInteractor: DetailsBusinessLogic, DetailsDataStore {
    
    var presenter: DetailsPresentationLogic?
    var worker: DetailsWorker?
    
    var character: Actor?
    
    func setupView() {
        
        worker = DetailsWorker()
        
        let response = Details.SetupView.Response(character: character)
        
        presenter?.setupView(response: response)
    }
    
    // MARK: Series
    
    func getSeriesCount() -> Int {
        return character?.series?.items?.count ?? 0
    }
    
    func getComicsCount() -> Int {
        return character?.comics?.items?.count ?? 0
    }
    
    func getSectionsCount() -> Int {
        return [
            Details.Models.TypeCell.serie, Details.Models.TypeCell.comic
        ].count
    }
    
    func getDataCellFor(index: Int, section: Int) -> Details.Models.DetailCellModel {
        
        var model = Details.Models.DetailCellModel()
        
        switch section {
        case 0: // series
            model.serie = character?.series?.items?.getElement(index)
            model.type = .serie
        default: // comics
            model.comic = character?.comics?.items?.getElement(index)
            model.type = .comic
        }
        
        return model
        
    }
}
