//
//  MainWorkerTests.swift
//  JSONMarvelapp
//
//  Created by Iván Díaz Molina on 3/12/20.
//  Copyright (c) 2020 IDIAZM. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import JSONMarvelapp
import XCTest

class MainWorkerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: MainWorker!
    static var testSeries: [Serie]!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupMainWorker()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupMainWorker() {
        sut = MainWorker()
        initSeriesMocks()
    }
    
    /// method that creates mocks objects of series
    fileprivate func initSeriesMocks() {
        
        MainWorkerTests.testSeries = []
        
        for i in 0...10 {
            var serie = Serie()
            serie.id = i
            serie.title = "title \(i)"
            MainWorkerTests.testSeries.append(serie)
        }
    }
    
    // MARK: Test doubles
    
    class SeriesMemStoreSpy: APISerieRepository {
        
        // MARK: Method call expectations
        var getSeriesCalled = false
        
        override func getSeries(completion: @escaping ([Serie]) -> Void) {
            getSeriesCalled = true
            completion(MainWorkerTests.testSeries)
        }
    }
    
    // MARK: Tests
    
    func testGetInitialData() {
        
        // Given
        let seriesMemStoreSpy = SeriesMemStoreSpy()
        
        // When
        var fetchedSeries = [Serie]()
        
        seriesMemStoreSpy.getSeries { (series) in
            
            let expect = self.expectation(description: "Wait for getInitialData() to return")
            fetchedSeries = series
            expect.fulfill()
        }
        
        self.waitForExpectations(timeout: 3.0)
        
        // Then
        XCTAssertTrue(seriesMemStoreSpy.getSeriesCalled, "Calling getInitialData() should ask the data store for a list of series")
        XCTAssertEqual(fetchedSeries.count, MainWorkerTests.testSeries.count, "Calling getInitialData() should ask the data store for a list of series")
    }
}

